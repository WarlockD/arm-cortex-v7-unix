/*
 * fs.h
 *
 *  Created on: Apr 18, 2017
 *      Author: warlo
 */

#ifndef XV6CPP_FS_H_
#define XV6CPP_FS_H_



#include <cstdint>
#include <sys\types.h>
#include <sys\stat.h>

#include "ObjectCache.h"


namespace xv6 {
	static constexpr size_t NDIRECT = 12;
	static constexpr size_t ROOTINO =1 ; // root i-number
	static constexpr size_t FSBSIZE =512;  // fs block sizeblock size
	struct inode;
	struct pipe;

	struct file {
	    enum file_type { FD_NONE, FD_PIPE, FD_INODE };
	    file_type 	type;
	    char         readable;
	    char         writable;
	    uint32_t      off;
	    // we can union this
	    union {
	    	struct pipe  *pipe;
	    	struct inode *ip;
	    };
	    int stat(struct stat *st);
	    int read(uint8_t *addr, size_t n);
	    int write(const uint8_t *addr, size_t n);
	    void close();
	    static file* filealloc();
	};


	struct inode_key {
		dev_t dev;
		uint32_t inum;
	};
	// in-memory copy of an inode
	struct inode {

		enum inode_flags {
			I_BUSY =0x1,
			I_VALID=0x2
		};
		dev_t dev;
		uint32_t inum;
		bool operator==(const inode_key& key) const { return dev == key.dev && inum == key.inum; }
		inode_flags     flags;      // I_BUSY, I_VALID
		short   		type;       // copy of disk inode
		short   		nlink;
		uint32_t    	size;
		uint32_t    	addrs[NDIRECT+1];
		inode() : dev(0), inum(0), flags(0), type(0), nlink(0),size(0) {}

	};
	#define I_BUSY 0x1
	#define I_VALID 0x2




} /* namespace xv6 */

#endif /* XV6CPP_FS_H_ */
