/*
 * fs.h
 *
 *  Created on: Apr 18, 2017
 *      Author: warlo
 */

#ifndef XV6CPP_FS_H_
#define XV6CPP_FS_H_



#include <cstdint>
#include <sys\types.h>
#include "ObjectCache.h"


namespace xv6 {
	static constexpr size_t NDIRECT = 12;

	struct inode;
	struct pipe;

	struct file {
	    enum { FD_NONE, FD_PIPE, FD_INODE } type;
	    int          ref;   // reference count
	    char         readable;
	    char         writable;
	    uint32_t      off;
	    // we can union this
	    union {
	    	struct pipe  *pipe;
	    	struct inode *ip;
	    };
	};

	// in-memory copy of an inode
	struct inode {
		static constexpr size_t CACHE_SIZE = 64;
		using inode_cache_t = static_cache<inode,CACHE_SIZE>;

		enum inode_flags {
			I_BUSY =0x1,
			I_VALID=0x2
		};
		dev_t    		dev;        // Device number
		uint32_t    	inum;       // Inode number
		inode_flags     flags;      // I_BUSY, I_VALID
		short   		type;       // copy of disk inode
		short   		nlink;
		uint32_t    	size;
		uint32_t    	addrs[NDIRECT+1];
	};
	#define I_BUSY 0x1
	#define I_VALID 0x2




} /* namespace xv6 */

#endif /* XV6CPP_FS_H_ */
