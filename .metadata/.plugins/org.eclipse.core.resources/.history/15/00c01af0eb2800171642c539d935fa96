/*
 * nuttxinode.cpp
 *
 *  Created on: Apr 24, 2017
 *      Author: warlo
 */

#include "nuttxinode.h"
#include "bitmap.h"
#include <cassert>

#define CONFIG_SEM_PREALLOCHOLDERS 20
#define getpid() (0) /* filler */
namespace nuttx {
#define NO_HOLDER (pid_t)-1;
	struct inode_sem_s
	{
	  bitops::simple_semaphore   sem;     /* The semaphore */
	  pid_t   holder;  /* The current holder of the semaphore */
	  int16_t count;   /* Number of counts held */
	};
	static inode_sem_s g_inode_sem;
	static nuttx_inode  _g_rootnode("");
	static nuttx_inode *g_root_inode = &_g_rootnode;
#define dirchar(c) ((c) == '\\' || (c) == '/' || (c) == '\0')

	static int _inode_compare(const char *fname, const char* char *nname)
	{
	  if (!nname) return 1;
	  if (!fname)return -1;
	  for (; ; )
	    {
	      if (*nname=='\0'){
	          if (dirchar(*fname))
	              return 0; /* Yes.. return match */
	          else
	              return 1;/* No... return find name > node name */
	      }
	      else if (dirchar(*fname)){ /* At end of find name? */
	          return -1; /* Yes... return find name < node name */
	        }
	      /* Check for non-matching characters */
	      else if (*fname > *nname)  return 1;
	      else if (*fname < *nname)  return -1;
	      else { fname++; nname++; }
	    }
	  return 0; // never gets here
	}





} /* namespace xv6 */
