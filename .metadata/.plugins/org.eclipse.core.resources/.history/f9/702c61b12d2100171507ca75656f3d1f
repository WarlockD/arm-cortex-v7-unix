
// The ARM UART, a memory mapped device
#include "arm.h"
#include "types.h"
#include "defs.h"
#include "param.h"
#include "arm.h"
#include "proc.h"

void dump_trapframe (struct trapframe *tf)
{
    cprintf ("     r0: 0x%x\n", tf->r0);
    cprintf ("     r1: 0x%x\n", tf->r1);
    cprintf ("     r2: 0x%x\n", tf->r2);
    cprintf ("     r3: 0x%x\n", tf->r3);
    cprintf ("     r4: 0x%x\n", tf->r4);
    cprintf ("     r5: 0x%x\n", tf->r5);
    cprintf ("     r6: 0x%x\n", tf->r6);
    cprintf ("     r7: 0x%x\n", tf->r7);
    cprintf ("     r8: 0x%x\n", tf->r8);
    cprintf ("   xpsr: 0x%x\n", tf->xpsr);
    cprintf ("     sp: 0x%x\n", tf->sp);
    cprintf ("     ip: 0x%x\n", tf->ip);
    cprintf ("     fp: 0x%x\n", tf->fp);
    cprintf ("     lr: 0x%x\n", tf->lr);
    cprintf ("     pc: 0x%x\n", tf->pc);
}

int do_trap(int irq, struct trapframe* tf) {
	dump_trapframe(tf);
	while(1);
	return 0;
}

void            trap_init(void){

}
